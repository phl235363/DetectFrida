name: Android CI & Release

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "*" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout source
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3Ô∏è‚É£ Cache Gradle to speed up builds
      - name: Set up Gradle (with cache)
        uses: gradle/actions/setup-gradle@v3

      # 4Ô∏è‚É£ Decode keystore (n·∫øu b·∫°n c·∫•u h√¨nh secrets ƒë·ªÉ k√Ω)
      - name: Decode keystore (optional)
        if: env.KEYSTORE_BASE64 != ''
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > keystore.jks
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

      # 5Ô∏è‚É£ Build Debug
      - name: Build Debug APK
        run: ./gradlew --no-daemon clean assembleDebug

      # 6Ô∏è‚É£ Build Signed Release n·∫øu c√≥ keystore
      - name: Build Signed Release APK
        if: env.KEYSTORE_BASE64 != ''
        env:
          KEYSTORE_PATH: ${{ github.workspace }}/keystore.jks
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "Using signing keystore..."
          printf "\nMY_KEYSTORE_FILE=$KEYSTORE_PATH\nMY_KEYSTORE_PASSWORD=$KEYSTORE_PASSWORD\nMY_KEY_ALIAS=$KEY_ALIAS\nMY_KEY_PASSWORD=$KEY_PASSWORD\n" >> ~/.gradle/gradle.properties
          ./gradlew --no-daemon assembleRelease

      # 7Ô∏è‚É£ N·∫øu kh√¥ng c√≥ keystore ‚Üí build release unsigned
      - name: Build Unsigned Release APK
        if: env.KEYSTORE_BASE64 == ''
        run: ./gradlew --no-daemon assembleRelease

      # 8Ô∏è‚É£ Upload artifacts
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: |
            **/build/outputs/apk/debug/*.apk

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: |
            **/build/outputs/apk/release/*.apk

      - name: Upload ProGuard Mapping (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mapping-files
          path: |
            **/build/outputs/mapping/release/mapping.txt
          if-no-files-found: ignore

      # 9Ô∏è‚É£ T·ª± ƒë·ªông t·∫°o GitHub Release n·∫øu push l√™n main/master
      - name: Create GitHub Release
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "Build v${{ github.run_number }}"
          body: |
            üöÄ Automatic Android build from GitHub Actions  
            - Build number: ${{ github.run_number }}
            - Commit: ${{ github.sha }}
          files: |
            **/build/outputs/apk/release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
